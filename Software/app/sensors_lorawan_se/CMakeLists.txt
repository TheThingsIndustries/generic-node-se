#-------------------
# LoRaWAN library
#-------------------
option(WITH_SECURE_ELEMENT "Use secure element integrated keys." OFF)

if(WITH_SECURE_ELEMENT)
file(GLOB LORAWAN_SRC
    "${PROJECT_SOURCE_DIR}/lib/ATECC608A-TNGLORA/*.c"
    "${PROJECT_SOURCE_DIR}/lib/cryptoauthlib/lib/*.c"
    "${PROJECT_SOURCE_DIR}/lib/cryptoauthlib/lib/calib/*.c"
    "${PROJECT_SOURCE_DIR}/lib/cryptoauthlib/lib/crypto/*.c"
    "${PROJECT_SOURCE_DIR}/lib/cryptoauthlib/lib/crypto/hashes/*.c"
    "${PROJECT_SOURCE_DIR}/lib/cryptoauthlib/lib/hal/atca_hal.c"
    "${PROJECT_SOURCE_DIR}/lib/cryptoauthlib/lib/host/*.c"
    "${PROJECT_SOURCE_DIR}/${LORAWAN_DIR}/LoRaWAN/LmHandler/*.c"
    "${PROJECT_SOURCE_DIR}/${LORAWAN_DIR}/LoRaWAN/LmHandler/packages/*.c"
    "${PROJECT_SOURCE_DIR}/${LORAWAN_DIR}/LoRaWAN/Mac/*.c"
    "${PROJECT_SOURCE_DIR}/${LORAWAN_DIR}/LoRaWAN/Mac/region/*.c"
    "${PROJECT_SOURCE_DIR}/${LORAWAN_DIR}/LoRaWAN/Patterns/Basic/*.c"
    "${PROJECT_SOURCE_DIR}/lib/Utilities/*.c"
    "${PROJECT_SOURCE_DIR}/lib/GNSE_TRACER/adv_tracer/*.c"
    "${PROJECT_SOURCE_DIR}/lib/GNSE_TRACER/tiny_printf/*.c"
    "${PROJECT_SOURCE_DIR}/lib/Utilities/baremetal/*.c"
    "${PROJECT_SOURCE_DIR}/lib/GNSE_BSP/*.c"
    "${PROJECT_SOURCE_DIR}/lib/GNSE_HAL/*.c"
    "${PROJECT_SOURCE_DIR}/lib/SPIFFS/*.c"
    "${PROJECT_SOURCE_DIR}/lib/SHTC3/*.c"
    "${PROJECT_SOURCE_DIR}/lib/MX25R1635/*.c"
    "${PROJECT_SOURCE_DIR}/lib/LIS2DH12/*.c"
    "${PROJECT_SOURCE_DIR}/lib/BUZZER/*.c"
    "${PROJECT_SOURCE_DIR}/${LORAWAN_DIR}/LoRaWAN/Utilities/*.c"
    "${PROJECT_SOURCE_DIR}/${LORAWAN_DIR}/SubGHz_Phy/stm32_radio_driver/*.c"
    )
else() # WITH_SECURE_ELEMENT
file(GLOB LORAWAN_SRC
    "${PROJECT_SOURCE_DIR}/${LORAWAN_DIR}/LoRaWAN/Crypto/*.c"
    "${PROJECT_SOURCE_DIR}/${LORAWAN_DIR}/LoRaWAN/LmHandler/*.c"
    "${PROJECT_SOURCE_DIR}/${LORAWAN_DIR}/LoRaWAN/LmHandler/packages/*.c"
    "${PROJECT_SOURCE_DIR}/${LORAWAN_DIR}/LoRaWAN/Mac/*.c"
    "${PROJECT_SOURCE_DIR}/${LORAWAN_DIR}/LoRaWAN/Mac/region/*.c"
    "${PROJECT_SOURCE_DIR}/${LORAWAN_DIR}/LoRaWAN/Patterns/Basic/*.c"
    "${PROJECT_SOURCE_DIR}/lib/Utilities/*.c"
    "${PROJECT_SOURCE_DIR}/lib/GNSE_TRACER/adv_tracer/*.c"
    "${PROJECT_SOURCE_DIR}/lib/GNSE_TRACER/tiny_printf/*.c"
    "${PROJECT_SOURCE_DIR}/lib/Utilities/baremetal/*.c"
    "${PROJECT_SOURCE_DIR}/lib/GNSE_BSP/*.c"
    "${PROJECT_SOURCE_DIR}/lib/GNSE_HAL/*.c"
    "${PROJECT_SOURCE_DIR}/lib/SPIFFS/*.c"
    "${PROJECT_SOURCE_DIR}/lib/SHTC3/*.c"
    "${PROJECT_SOURCE_DIR}/lib/MX25R1635/*.c"
    "${PROJECT_SOURCE_DIR}/lib/LIS2DH12/*.c"
    "${PROJECT_SOURCE_DIR}/lib/BUZZER/*.c"
    "${PROJECT_SOURCE_DIR}/${LORAWAN_DIR}/LoRaWAN/Utilities/*.c"
    "${PROJECT_SOURCE_DIR}/${LORAWAN_DIR}/SubGHz_Phy/stm32_radio_driver/*.c"
    )
endif()  # WITH_SECURE_ELEMENT

add_library(lorawan STATIC
    ${LORAWAN_SRC}
    )

if(WITH_SECURE_ELEMENT)
target_include_directories(lorawan
    PUBLIC
    ${PROJECT_SOURCE_DIR}/${HAL_DIR}/Inc
    ${PROJECT_SOURCE_DIR}/${MCU_DIR}/Include
    ${PROJECT_SOURCE_DIR}/${CMSIS_DIR}/Core/Include
    ${PROJECT_SOURCE_DIR}/lib/ATECC608A-TNGLORA
    ${PROJECT_SOURCE_DIR}/lib/cryptoauthlib/lib
    ${PROJECT_SOURCE_DIR}/lib/cryptoauthlib/lib/calib
    ${PROJECT_SOURCE_DIR}/lib/cryptoauthlib/lib/crypto
    ${PROJECT_SOURCE_DIR}/lib/cryptoauthlib/lib/crypto/hashes
    ${PROJECT_SOURCE_DIR}/lib/cryptoauthlib/lib/hal
    ${PROJECT_SOURCE_DIR}/lib/cryptoauthlib/lib/host
    ${PROJECT_SOURCE_DIR}/${LORAWAN_DIR}/LoRaWAN/LmHandler
    ${PROJECT_SOURCE_DIR}/${LORAWAN_DIR}/LoRaWAN/LmHandler/packages
    ${PROJECT_SOURCE_DIR}/${LORAWAN_DIR}/LoRaWAN/Mac
    ${PROJECT_SOURCE_DIR}/${LORAWAN_DIR}/LoRaWAN/Mac/region
    ${PROJECT_SOURCE_DIR}/${LORAWAN_DIR}/LoRaWAN/Patterns/Basic
    ${PROJECT_SOURCE_DIR}/lib/Utilities
    ${PROJECT_SOURCE_DIR}/lib/GNSE_TRACER
    ${PROJECT_SOURCE_DIR}/lib/GNSE_TRACER/adv_tracer
    ${PROJECT_SOURCE_DIR}/lib/GNSE_TRACER/tiny_printf
    ${PROJECT_SOURCE_DIR}/lib/Utilities/baremetal
    ${PROJECT_SOURCE_DIR}/${LORAWAN_DIR}/LoRaWAN/Utilities
    ${PROJECT_SOURCE_DIR}/${LORAWAN_DIR}/SubGHz_Phy
    ${PROJECT_SOURCE_DIR}/${LORAWAN_DIR}/SubGHz_Phy/stm32_radio_driver
    PRIVATE
    ${PROJECT_SOURCE_DIR}/target
    ${PROJECT_SOURCE_DIR}/app/sensors_lorawan_se/conf
    ${PROJECT_SOURCE_DIR}/app/sensors_lorawan_se
    ${PROJECT_SOURCE_DIR}/lib/GNSE_BSP
    ${PROJECT_SOURCE_DIR}/lib/GNSE_HAL
    ${PROJECT_SOURCE_DIR}/lib/SPIFFS
    ${PROJECT_SOURCE_DIR}/lib/SHTC3
    ${PROJECT_SOURCE_DIR}/lib/MX25R1635
    ${PROJECT_SOURCE_DIR}/lib/LIS2DH12
    ${PROJECT_SOURCE_DIR}/lib/BUZZER
    )
else() # WITH_SECURE_ELEMENT
target_include_directories(lorawan
    PUBLIC
    ${PROJECT_SOURCE_DIR}/${HAL_DIR}/Inc
    ${PROJECT_SOURCE_DIR}/${MCU_DIR}/Include
    ${PROJECT_SOURCE_DIR}/${CMSIS_DIR}/Core/Include
    ${PROJECT_SOURCE_DIR}/${LORAWAN_DIR}/LoRaWAN/Crypto
    ${PROJECT_SOURCE_DIR}/${LORAWAN_DIR}/LoRaWAN/LmHandler
    ${PROJECT_SOURCE_DIR}/${LORAWAN_DIR}/LoRaWAN/LmHandler/packages
    ${PROJECT_SOURCE_DIR}/${LORAWAN_DIR}/LoRaWAN/Mac
    ${PROJECT_SOURCE_DIR}/${LORAWAN_DIR}/LoRaWAN/Mac/region
    ${PROJECT_SOURCE_DIR}/${LORAWAN_DIR}/LoRaWAN/Patterns/Basic
    ${PROJECT_SOURCE_DIR}/lib/Utilities
    ${PROJECT_SOURCE_DIR}/lib/GNSE_TRACER
    ${PROJECT_SOURCE_DIR}/lib/GNSE_TRACER/adv_tracer
    ${PROJECT_SOURCE_DIR}/lib/GNSE_TRACER/tiny_printf
    ${PROJECT_SOURCE_DIR}/lib/Utilities/baremetal
    ${PROJECT_SOURCE_DIR}/${LORAWAN_DIR}/LoRaWAN/Utilities
    ${PROJECT_SOURCE_DIR}/${LORAWAN_DIR}/SubGHz_Phy
    ${PROJECT_SOURCE_DIR}/${LORAWAN_DIR}/SubGHz_Phy/stm32_radio_driver
    PRIVATE
    ${PROJECT_SOURCE_DIR}/target
    ${PROJECT_SOURCE_DIR}/app/sensors_lorawan_se/conf
    ${PROJECT_SOURCE_DIR}/app/sensors_lorawan_se
    ${PROJECT_SOURCE_DIR}/lib/GNSE_BSP
    ${PROJECT_SOURCE_DIR}/lib/GNSE_HAL
    ${PROJECT_SOURCE_DIR}/lib/SPIFFS
    ${PROJECT_SOURCE_DIR}/lib/SHTC3
    ${PROJECT_SOURCE_DIR}/lib/MX25R1635
    ${PROJECT_SOURCE_DIR}/lib/LIS2DH12
    ${PROJECT_SOURCE_DIR}/lib/BUZZER
    )
endif() # WITH_SECURE_ELEMENT

target_compile_definitions(lorawan
    PUBLIC
    ${MCU}
    )
#-------------------
# Main elf
#-------------------
if(WITH_SECURE_ELEMENT)
file(GLOB MAIN_SRC
        "${PROJECT_SOURCE_DIR}/app/app_common/*.c"
        "${PROJECT_SOURCE_DIR}/app/sensors_lorawan_se/*.c"
        "${PROJECT_SOURCE_DIR}/target/*.c"
        "${PROJECT_SOURCE_DIR}/lib/GNSE_BSP/*.c"
        "${PROJECT_SOURCE_DIR}/lib/GNSE_HAL/*.c"
        "${PROJECT_SOURCE_DIR}/lib/SPIFFS/*.c"
        "${PROJECT_SOURCE_DIR}/lib/Utilities/*.c"
        "${PROJECT_SOURCE_DIR}/lib/GNSE_TRACER/adv_tracer/*.c"
        "${PROJECT_SOURCE_DIR}/lib/GNSE_TRACER/tiny_printf/*.c"
        "${PROJECT_SOURCE_DIR}/lib/Utilities/baremetal/*.c"
        "${PROJECT_SOURCE_DIR}/lib/SHTC3/*.c"
        "${PROJECT_SOURCE_DIR}/lib/MX25R1635/*.c"
        "${PROJECT_SOURCE_DIR}/lib/LIS2DH12/*.c"
        "${PROJECT_SOURCE_DIR}/lib/BUZZER/*.c"
        "${PROJECT_SOURCE_DIR}/lib/ATECC608A-TNGLORA/*.c"
        "${PROJECT_SOURCE_DIR}/lib/cryptoauthlib/lib/*.c"
        "${PROJECT_SOURCE_DIR}/lib/cryptoauthlib/lib/calib/*.c"
        "${PROJECT_SOURCE_DIR}/lib/cryptoauthlib/lib/crypto/*.c"
        "${PROJECT_SOURCE_DIR}/lib/cryptoauthlib/lib/crypto/hashes/*.c"
        "${PROJECT_SOURCE_DIR}/lib/cryptoauthlib/lib/hal/atca_hal.c"
        "${PROJECT_SOURCE_DIR}/lib/cryptoauthlib/lib/host/*.c"
        )
else()
file(GLOB MAIN_SRC
        "${PROJECT_SOURCE_DIR}/app/app_common/*.c"
        "${PROJECT_SOURCE_DIR}/app/sensors_lorawan_se/*.c"
        "${PROJECT_SOURCE_DIR}/target/*.c"
        "${PROJECT_SOURCE_DIR}/lib/GNSE_BSP/*.c"
        "${PROJECT_SOURCE_DIR}/lib/GNSE_HAL/*.c"
        "${PROJECT_SOURCE_DIR}/lib/SPIFFS/*.c"
        "${PROJECT_SOURCE_DIR}/lib/Utilities/*.c"
        "${PROJECT_SOURCE_DIR}/lib/GNSE_TRACER/adv_tracer/*.c"
        "${PROJECT_SOURCE_DIR}/lib/GNSE_TRACER/tiny_printf/*.c"
        "${PROJECT_SOURCE_DIR}/lib/Utilities/baremetal/*.c"
        "${PROJECT_SOURCE_DIR}/lib/SHTC3/*.c"
        "${PROJECT_SOURCE_DIR}/lib/MX25R1635/*.c"
        "${PROJECT_SOURCE_DIR}/lib/LIS2DH12/*.c"
        "${PROJECT_SOURCE_DIR}/lib/BUZZER/*.c"
        )
endif()


set(SOURCES
    ${MAIN_SRC}
    ${PROJECT_SOURCE_DIR}/${STARTUP_FILE}
    ${PROJECT_SOURCE_DIR}/${SYSTEM_FILE}
    )
add_executable(${PROJECT_NAME}.elf
    ${SOURCES}
    )

if(WITH_SECURE_ELEMENT)
target_include_directories(${PROJECT_NAME}.elf
    PUBLIC
    ${PROJECT_SOURCE_DIR}/target
    ${PROJECT_SOURCE_DIR}/app
    ${PROJECT_SOURCE_DIR}/app/app_common
    ${PROJECT_SOURCE_DIR}/app/sensors_lorawan_se
    ${PROJECT_SOURCE_DIR}/app/sensors_lorawan_se/conf
    ${PROJECT_SOURCE_DIR}/app/sensors_lorawan_se
    ${PROJECT_SOURCE_DIR}/lib/GNSE_BSP
    ${PROJECT_SOURCE_DIR}/lib/GNSE_HAL
    ${PROJECT_SOURCE_DIR}/lib/SPIFFS
    ${PROJECT_SOURCE_DIR}/lib/Utilities
    ${PROJECT_SOURCE_DIR}/lib/GNSE_TRACER
    ${PROJECT_SOURCE_DIR}/lib/GNSE_TRACER/adv_tracer
    ${PROJECT_SOURCE_DIR}/lib/GNSE_TRACER/tiny_printf
    ${PROJECT_SOURCE_DIR}/lib/Utilities/baremetal
    ${PROJECT_SOURCE_DIR}/lib/SHTC3
    ${PROJECT_SOURCE_DIR}/lib/MX25R1635
    ${PROJECT_SOURCE_DIR}/lib/LIS2DH12
    ${PROJECT_SOURCE_DIR}/lib/BUZZER

    ${PROJECT_SOURCE_DIR}/lib/ATECC608A-TNGLORA
    ${PROJECT_SOURCE_DIR}/lib/cryptoauthlib/lib
    ${PROJECT_SOURCE_DIR}/lib/cryptoauthlib/lib/calib
    ${PROJECT_SOURCE_DIR}/lib/cryptoauthlib/lib/crypto
    ${PROJECT_SOURCE_DIR}/lib/cryptoauthlib/lib/crypto/hashes
    ${PROJECT_SOURCE_DIR}/lib/cryptoauthlib/lib/hal
    ${PROJECT_SOURCE_DIR}/lib/cryptoauthlib/lib/host
    )
else()
target_include_directories(${PROJECT_NAME}.elf
    PUBLIC
    ${PROJECT_SOURCE_DIR}/target
    ${PROJECT_SOURCE_DIR}/app
    ${PROJECT_SOURCE_DIR}/app/app_common
    ${PROJECT_SOURCE_DIR}/app/sensors_lorawan_se
    ${PROJECT_SOURCE_DIR}/app/sensors_lorawan_se/conf
    ${PROJECT_SOURCE_DIR}/app/sensors_lorawan_se
    ${PROJECT_SOURCE_DIR}/lib/GNSE_BSP
    ${PROJECT_SOURCE_DIR}/lib/GNSE_HAL
    ${PROJECT_SOURCE_DIR}/lib/SPIFFS
    ${PROJECT_SOURCE_DIR}/lib/Utilities
    ${PROJECT_SOURCE_DIR}/lib/GNSE_TRACER
    ${PROJECT_SOURCE_DIR}/lib/GNSE_TRACER/adv_tracer
    ${PROJECT_SOURCE_DIR}/lib/GNSE_TRACER/tiny_printf
    ${PROJECT_SOURCE_DIR}/lib/Utilities/baremetal
    ${PROJECT_SOURCE_DIR}/lib/SHTC3
    ${PROJECT_SOURCE_DIR}/lib/MX25R1635
    ${PROJECT_SOURCE_DIR}/lib/LIS2DH12
    ${PROJECT_SOURCE_DIR}/lib/BUZZER
    )
endif()

target_link_libraries(${PROJECT_NAME}.elf
    PUBLIC
    hal
    lorawan
    )
